(self["webpackChunkdraw"]=self["webpackChunkdraw"]||[]).push([[504],{5504:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>y});var i=s(3673);function o(e,t,s,o,n,a){const r=(0,i.up)("DrawCanvas");return(0,i.wg)(),(0,i.j4)(r)}s(71);var n=s(2323);const a={class:"q-pt-md"},r={class:"flex justify-evenly"},c={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink","aria-hidden":"true",focusable:"false",width:"2em",height:"2em",style:{"-ms-transform":"rotate(360deg)","-webkit-transform":"rotate(360deg)",transform:"rotate(360deg)"},preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 24 24"},h={class:"flex justify-center q-pt-md"},l={class:"flex row items-center"},u={class:"flex column items-center"},m=(0,i.Uk)(" is drawing canvas ");function d(e,t,s,o,d,g){const v=(0,i.up)("q-btn"),f=(0,i.up)("q-color"),k=(0,i.up)("q-dialog"),p=(0,i.up)("q-icon"),w=(0,i.up)("q-slider");return(0,i.wg)(),(0,i.j4)("div",a,[(0,i.Wm)("div",r,[(0,i.Wm)(v,{round:"",color:"primary",disable:d.cSteps<0,icon:"undo",onClick:g.undo,key:d.strokesList},null,8,["disable","onClick"]),(0,i.Wm)(v,{round:"",color:"primary",disable:!1,icon:"redo",onClick:g.redo,key:d.strokesList},null,8,["onClick"]),(0,i.Wm)(v,{round:"",style:"#fff"==d.hex?"background:#1976D2;color:white;":"background:"+d.hex+";color:white;",icon:"palette",onClick:t[1]||(t[1]=e=>d.changingColor=!d.changingColor)},null,8,["style"]),(0,i.Wm)(v,{round:"",color:"primary",onClick:g.toggleEraser},{default:(0,i.w5)((()=>[((0,i.wg)(),(0,i.j4)("svg",c,[(0,i.Wm)("path",{d:"M16.24 3.56l4.95 4.94c.78.79.78 2.05 0 2.84L12 20.53a4.008 4.008 0 0 1-5.66 0L2.81 17c-.78-.79-.78-2.05 0-2.84l10.6-10.6c.79-.78 2.05-.78 2.83 0M4.22 15.58l3.54 3.53c.78.79 2.04.79 2.83 0l3.53-3.53l-4.95-4.95l-4.95 4.95z",fill:d.eraserActive?"#89f6ff":"#fff"},null,8,["fill"])]))])),_:1},8,["onClick"]),(0,i.Wm)(v,{round:"",color:"negative",icon:"delete",onClick:g.deleteCanvas},null,8,["onClick"]),(0,i.Wm)(k,{modelValue:d.changingColor,"onUpdate:modelValue":t[3]||(t[3]=e=>d.changingColor=e)},{default:(0,i.w5)((()=>[(0,i.Wm)(f,{modelValue:d.hex,"onUpdate:modelValue":t[2]||(t[2]=e=>d.hex=e),style:{width:"70vw"},"default-view":"palette","no-header":"","no-footer":"",class:"my-picker absolute"},null,8,["modelValue"])])),_:1},8,["modelValue"])]),(0,i.Wm)("div",h,[(0,i.Wm)("div",l,[(0,i.Wm)(p,{color:"primary",size:"md",class:"q-pr-md",name:"brush"}),(0,i.Wm)(w,{style:{width:"300px"},modelValue:d.brushSize,"onUpdate:modelValue":t[4]||(t[4]=e=>d.brushSize=e),min:1,max:20,label:"",color:"primary"},null,8,["modelValue"])])]),(0,i.Wm)("div",u,[(0,i.Wm)("div",{style:d.canvasOwner?"opacity:1":"opacity:0"},[(0,i.Wm)("strong",null,(0,n.zw)(d.canvasOwner),1),m],4),(0,i.Wm)("canvas",{style:{border:"2px solid black"},ref:"canvas",onResize:t[5]||(t[5]=e=>g.resize()),onMousemove:t[6]||(t[6]=(...e)=>g.mousemove&&g.mousemove(...e)),onMousedown:t[7]||(t[7]=(...e)=>g.mousedown&&g.mousedown(...e)),onMouseup:t[8]||(t[8]=(...e)=>g.mouseup&&g.mouseup(...e)),onMouseout:t[9]||(t[9]=(...e)=>g.mouseout&&g.mouseout(...e)),onTouchstart:t[10]||(t[10]=(...e)=>g.mousedown&&g.mousedown(...e)),onTouchend:t[11]||(t[11]=(...e)=>g.mouseup&&g.mouseup(...e)),onTouchmove:t[12]||(t[12]=(...e)=>g.touchmove&&g.touchmove(...e))},null,544)]),(0,i.Uk)(" "+(0,n.zw)(d.canPainting)+" "+(0,n.zw)(d.socket.username)+" ("+(0,n.zw)(d.socket.id)+") "+(0,n.zw)(d.strokesList.length)+(0,n.zw)(d.cSteps),1)])}const g={data(){return{socket:{},eraserActive:!1,painting:!1,canPainting:!0,canvasOwner:"",strokes:[],strokesList:[],redo_list:[],currentStroke:[],removedStrokes:[],hex:"#000",brushSize:10,changingColor:!1,ctx:null,cSteps:-1}},mounted(){this.ctx=this.$refs.canvas.getContext("2d"),this.resize(),this.$refs.canvas.ontouchmove=function(e){e.preventDefault()},this.socket=this.$store.state.socket,console.log(this.socket),this.addSocketListeners()},watch:{hex:function(){this.changingColor=!1},eraserActive:function(){this.$refs.canvas.style="border: 2px solid black;cursor: default"}},methods:{resize(){this.$refs.canvas.width=1e3,this.$refs.canvas.height=640},addSocketListeners(){this.socket.on("receivePrevCanvasData",(e=>{this.strokesList=e.canvasData,this.cSteps=e.cSteps,console.log(this.strokesList,this.cSteps),this.reDrawCanvas(!1)})),this.socket.on("lockCanvas",(e=>{this.canvasOwner=e.username,this.canPainting=!1})),this.socket.on("releaseCanvas",(e=>{this.canvasOwner="",this.canPainting=!0,null!=e&&(this.cSteps++,this.strokesList.push(e),this.cSteps<this.strokesList.length-1&&(this.strokesList.length=this.cSteps),this.reDrawCanvas(!1))})),this.socket.on("receiveUndo",(e=>{this.$q.notify({message:`${e.username} did an undo!`}),this.cSteps--,this.reDrawCanvas(!0)})),this.socket.on("receiveRedo",(e=>{this.$q.notify({message:`${e.username} did a redo!`}),this.cSteps++,this.reDrawCanvas(!0)})),this.socket.on("brushMove",(e=>{this.currentStroke.push([Number.parseInt(e.points[0]),Number.parseInt(e.points[1])]),this.ctx.beginPath(),this.ctx.lineWidth=e.brushSize,this.ctx.strokeStyle=e.hex,this.ctx.lineJoin="round",this.ctx.lineCap="round",this.ctx.lineTo(e.points[0],e.points[1]),this.ctx.stroke()})),this.socket.on("clearCanvas",(e=>{this.$q.notify({message:`${e.username} cleared the canvas!`,color:"negative"}),this.$store.state.msgsData.push(e),this.clearCanvas(e)}))},mouseout(e){this.painting&&this.mouseup()},mousedown(e){this.canPainting&&(this.painting=!0,this.removedStrokes&&(this.removedStrokes=[]),this.currentStroke=[],this.ctx.beginPath(),this.socket.emit("lockCanvas",{id:this.socket.id,username:this.socket.username}),this.mousemove(e))},mousemove(e){if(!this.painting||!this.canPainting)return;this.dot(e);let t={points:[e.clientX-this.getOffset(this.$refs.canvas).left,e.clientY-this.getOffset(this.$refs.canvas).top],hex:this.eraserActive?"#fff":this.hex,brushSize:this.brushSize};this.socket.emit("brushMove",t)},touchmove(e){if(!this.painting||!this.canPainting)return;this.dotTouch(e);let t={points:[e.touches[0].clientX-this.getOffset(this.$refs.canvas).left,e.touches[0].clientY-this.getOffset(this.$refs.canvas).top],hex:this.eraserActive?"#fff":this.hex,brushSize:this.brushSize};this.socket.emit("brushMove",t)},dotTouch(e){this.currentStroke.push([Number.parseInt(e.touches[0].clientX),Number.parseInt(e.touches[0].clientY)]),this.ctx.lineWidth=this.brushSize,this.ctx.strokeStyle=this.eraserActive?"#fff":this.hex,this.ctx.lineJoin="round",this.ctx.lineCap="round",this.ctx.lineTo(e.touches[0].clientX-this.getOffset(this.$refs.canvas).left,e.touches[0].clientY-this.getOffset(this.$refs.canvas).top),this.ctx.stroke()},dot(e){this.currentStroke.push([Number.parseInt(e.clientX),Number.parseInt(e.clientY)]),this.ctx.lineWidth=this.brushSize,this.ctx.strokeStyle=this.eraserActive?"#fff":this.hex,this.ctx.lineJoin="round",this.ctx.lineCap="round",this.ctx.lineTo(e.clientX-this.getOffset(this.$refs.canvas).left,e.clientY-this.getOffset(this.$refs.canvas).top),this.ctx.stroke()},mouseup(){this.painting=!1,this.cSteps++,this.strokesList.push(this.$refs.canvas.toDataURL()),this.socket.emit("releaseCanvas",this.$refs.canvas.toDataURL()),this.cSteps<this.strokesList.length-1&&(console.log("yes"),this.strokesList.length=this.cSteps)},test(){},undo(){this.socket.emit("sendUndo",{id:this.socket.id,username:this.socket.username}),this.strokesList<=0||(this.cSteps--,this.reDrawCanvas(!0))},redo(){this.cSteps>=this.strokesList.length-1?this.$q.notify({message:"max limit!"}):(this.socket.emit("sendRedo",{id:this.socket.id,username:this.socket.username}),this.cSteps++,this.reDrawCanvas(!0))},clearCanvas(e){console.log(e.username+" cleared canvas"),this.ctx.fillStyle="rgb(255, 255, 255)",this.ctx.clearRect(0,0,this.$refs.canvas.width,this.$refs.canvas.height)},reDrawCanvas(e){e&&this.ctx.clearRect(0,0,this.$refs.canvas.width,this.$refs.canvas.height);const t=new Image;t.src=this.strokesList[this.cSteps],t.onload=()=>{this.ctx.drawImage(t,0,0)}},toggleEraser(){this.eraserActive=!this.eraserActive},getOffset(e){const t=e.getBoundingClientRect();return{left:t.left+window.scrollX,top:t.top+window.scrollY}},deleteCanvas(){this.$q.dialog({title:"wtf brah?",message:"Would you like to clear canvas?",cancel:!0,persistent:!0}).onOk((()=>{let e={id:this.socket.id,username:this.socket.username};this.clearCanvas(e),this.socket.emit("clearCanvas",e)}))}}};var v=s(9892),f=s(7455),k=s(4190),p=s(4554),w=s(2064),x=s(7518),S=s.n(x);g.render=d;const C=g;S()(g,"components",{QBtn:v.Z,QDialog:f.Z,QColor:k.Z,QIcon:p.Z,QSlider:w.Z});var b=s(4773);const $={components:{DrawCanvas:C},name:"PageIndex",data(){return{socket:{},uniqueUsername:!1}},created(){this.socket=(0,b.ZP)("wss://draw.plasmatch.in"),this.$store.commit("updateSocket",this.socket),this.$q.loading.show({message:"Connecting to Server...",boxClass:"bg-grey-2 text-grey-9",spinnerColor:"primary"}),this.socket.on("receivePrevMsgsData",(e=>{this.$store.commit("updateMsgsData",e)})),this.socket.on("userJoin",(e=>{this.$q.notify({message:`<strong>${e.username} </strong> has joined! ðŸ¤Ÿ`,html:!0,color:"positive"})})),this.socket.on("userLeft",(e=>{this.$q.notify({message:`<strong>${e.username} </strong> has left! ðŸ˜§`,html:!0,color:"negative"})})),this.socket.on("connect",(()=>{console.log("connected to ws!"),this.$q.loading.hide(),localStorage.getItem("username")?(this.socket.username=localStorage.getItem("username"),this.socket.emit("userJoin",{username:this.socket.username,id:this.socket.id})):this.$q.dialog({title:"What is your name?",prompt:{model:"",type:"text",isValid:e=>{let t=!0;return Object.values(this.$store.state.usersList).forEach((s=>{s.username==e&&(console.log("username same"),t=!1)})),e.length>2&&t}},persistent:!0}).onOk((e=>{this.socket.username=e,this.$q.notify({message:`logged in as <strong>${e}</strong>!`,html:!0,color:"positive"}),this.socket.emit("userJoin",{username:this.socket.username,id:this.socket.id}),localStorage.setItem("username",e)}))}))},methods:{isUniqueUsername(e){return Object.values(this.$store.state.usersList).forEach((t=>{if(t.username==e)return console.log("username same"),!1})),!0}}};$.render=o;const y=$}}]);